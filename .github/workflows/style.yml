---
name: Code Style
on:
  - push
  - pull_request
jobs:
  lint:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    name: lint/code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Run isort
        run: |
          source .venv/bin/activate
          isort . --check
      - name: Run flake8
        run: |
          source .venv/bin/activate
          flake8 . --show-source --extend-exclude ".venv/,**/migrations/*"
      - name: Run black
        run: |
          source .venv/bin/activate
          black --check --extend-exclude ".venv/|/migrations/|manage.py" .